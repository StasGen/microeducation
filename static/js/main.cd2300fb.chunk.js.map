{"version":3,"sources":["ImageControl.tsx","Rating.tsx","RatingControl.tsx","ratingControlTester.ts","FloatingCopyButton.tsx","App.tsx","index.tsx"],"names":["MaterialTextControl","Unwrapped","imageControlTester","rankWith","and","isStringControl","scopeEndsWith","withJsonFormsControlProps","props","schema","Grid","container","style","maxWidth","src","data","Rating","id","value","updateValue","useState","hoverAt","setHoverAt","className","InputLabel","shrink","marginTop","cursor","fontSize","map","i","fullStars","onMouseOver","onMouseOut","onClick","handleChange","path","newValue","FloatingCopyButton","React","open","setOpen","Fab","color","navigator","clipboard","writeText","sx","position","bottom","right","zIndex","Snackbar","autoHideDuration","message","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","s","handleDefaultsAjv","createAjv","useDefaults","useStyles","makeStyles","episodeDescription","textAlign","overflowY","textOverflow","display","storyDescription","fauxButton","textTransform","padding","width","height","title","dataContent","overflow","justifyContent","borderRadius","backgroundColor","marginBottom","maxHeight","resetButton","margin","demoform","initialData","localStorage","getItem","JSON","parse","renderers","materialRenderers","tester","ratingControlTester","renderer","RatingControl","imageControl","App","classes","setData","stringifiedData","useMemo","stringify","useEffect","setItem","params","setParams","renderCourses","courses","c","currentParams","item","Button","course","episode","console","log","Card","raised","CardMedia","component","image","card","imageURL","alt","CardContent","gutterBottom","variant","description","episodes","length","renderEpisodes","courseNumber","e","stories","renderStories","episodeNumber","content","illustrationURL","header","text","Preview","direction","xs","Course","Episode","setValue","setRenderJSON","navbarHeight","setNavbarHeight","navbar","useRef","useLayoutEffect","current","clientHeight","paddingTop","Tabs","ref","onChange","event","centered","top","left","Tab","icon","FeaturedPlayList","iconPosition","label","Edit","RemoveRedEye","alignItems","Paper","spacing","ReportProblemRounded","releases","release","Publish","InfoRounded","Accordion","expanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","AccordionDetails","TextField","multiline","target","sm","uischema","cells","materialCells","errors","formData","positionedData","ep","st","j","stringifiedWithGenerationFormData","replaceAll","uuidv4","generationFormData","stringifiedFormData","setDataWithGeneration","ajv","theme","createTheme","components","MuiFormControl","styleOverrides","root","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.cd2300fb.chunk.js","sourcesContent":["import {\n  JsonSchema,\n  ControlProps,\n  isStringControl,\n  RankedTester,\n  rankWith,\n  schemaMatches,\n  scopeEndsWith,\n  and,\n} from '@jsonforms/core';\nimport { Grid, Typography } from '@mui/material';\nimport { Unwrapped } from '@jsonforms/material-renderers';\nimport { withJsonFormsControlProps } from '@jsonforms/react';\nconst { MaterialTextControl } = Unwrapped;\n\n\nexport const imageControl = (props: ControlProps) => {\n\tconst schema = props.schema as JsonSchema;\n  return (\n    <Grid container>\n\n        <img style={{ maxWidth: 250 }} src={props.data}></img>\n        <MaterialTextControl {...props}/>\n\n    </Grid>\n  );\n};\n\n\nexport const imageControlTester: RankedTester = rankWith(\n  5,\n  and(\n    isStringControl,\n    scopeEndsWith('URL')\n  )\n);\nexport default withJsonFormsControlProps(imageControl);","import React from 'react';\nimport { useState } from 'react';\nimport { InputLabel } from '@mui/material';\n\ninterface RatingProps {\n  id?: string;\n  value: number;\n  updateValue: (newValue: number) => void;\n}\n\nexport const Rating: React.FC<RatingProps> = ({ id, value, updateValue }) => {\n  const [hoverAt, setHoverAt] = useState<number | null>(null);\n\n  return (\n    <div id='#/properties/rating' className='rating'>\n      <InputLabel shrink style={{ marginTop: '0.8em' }}>Rating</InputLabel>\n      <div style={{ cursor: 'pointer', fontSize: '18px' }}>\n        {[0, 1, 2, 3, 4].map((i) => {\n          const fullStars = hoverAt ?? value;\n\n          return (\n            <span\n              onMouseOver={() => setHoverAt(i + 1)}\n              onMouseOut={() => setHoverAt(null)}\n              onClick={() => updateValue(i + 1)}\n              key={`${id}_${i}`}\n            >\n              {i < fullStars ? '\\u2605' : '\\u2606'}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import { withJsonFormsControlProps } from '@jsonforms/react';\nimport { Rating } from './Rating';\n\ninterface RatingControlProps {\n  data: any;\n  handleChange(path: string, value: any): void;\n  path: string;\n}\n\nconst RatingControl = ({ data, handleChange, path }: RatingControlProps) => (\n  <Rating\n    value={data}\n    updateValue={(newValue: number) => handleChange(path, newValue)}\n  />\n);\n\nexport default withJsonFormsControlProps(RatingControl);\n","import { rankWith, scopeEndsWith } from '@jsonforms/core';\n\nexport default rankWith(\n  3, //increase rank as needed\n  scopeEndsWith('rating')\n);\n","import * as React from 'react';\nimport Fab from '@mui/material/Fab';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nexport default function FloatingCopyButton({data}:any) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    navigator.clipboard.writeText(data);\n    setOpen(true);\n  };\n\n  return (\n    <div>\n    <Fab color=\"primary\" onClick={handleClick} sx={{position: 'fixed', bottom: 32, right: 32, zIndex: 10}}>\n  <ContentCopyIcon />\n</Fab>\n      <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        message=\"Content copied to clipboard\"\n      />\n    </div>\n  );\n}","import imageControl, {\n  imageControlTester,\n} from './ImageControl';\n\nimport { Fragment, useState, useMemo, useEffect } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport logo from './logo.svg';\nimport './App.css';\nimport schema from './schema.json';\nimport uischema from './uischema.json';\nimport { UISchemaElement } from '@jsonforms/core';\nimport {\n  materialCells,\n  materialRenderers,\n} from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport { makeStyles } from '@mui/styles';\nimport { createAjv } from '@jsonforms/core';\nimport { Generate } from '@jsonforms/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport React, { useRef, useLayoutEffect, memo } from 'react';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  useLocation,\n  useMatch,\n  useResolvedPath\n} from \"react-router-dom\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Tab,\n  Tabs,\n  AppBar,\n  Popover,\n  Toolbar,\n  Fab\n} from '@mui/material';\nimport {ExpandMore,\n Edit,\n RemoveRedEye,\n FeaturedPlayList,\n Publish,\n ReportProblemRounded,\n InfoRounded\n} from '@mui/icons-material';\nimport releases from './releases.json';\nimport FloatingCopyButton from './FloatingCopyButton';\nimport CodeEditor from '@uiw/react-textarea-code-editor';\n\n\n\n\n\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\n\n\n\n\nconst important = <T extends string>(s: T): T => `${s} !important` as T;\n\nconst handleDefaultsAjv = createAjv({useDefaults: true});\n\nconst useStyles = makeStyles({\n  episodeDescription: {\n    textAlign: 'left',\n    overflowY: \"auto\",\n   textOverflow: \"ellipsis\",\n   display: \"-webkit-box\",\n   \"-webkit-line-clamp\": 5, /* number of lines to show */\n           \"line-clamp\": 5, \n   \"-webkit-box-orient\": \"vertical\"\n  },\n  storyDescription: {\n   textAlign: 'left',\n   overflowY: \"auto\",\n   textOverflow: \"ellipsis\",\n   display: \"-webkit-box\",\n   \"-webkit-line-clamp\": 15, /* number of lines to show */\n           \"line-clamp\": 15, \n   \"-webkit-box-orient\": \"vertical\"\n  },\n  fauxButton: {\n    textTransform: important(\"none\")\n  },\n  container: {\n    padding: '1em',\n    width: '100%',\n    height: 'auto'\n  },\n  title: {\n    textAlign: 'left',\n  },\n  dataContent: {\n    overflow: 'auto',\n    display: 'flex',\n    justifyContent: 'left',\n    borderRadius: '0.25em',\n    backgroundColor: '#fefefe',\n    marginBottom: '1rem',\n    maxHeight: '300px',\n    width: '100%'\n  },\n  resetButton: {\n    margin: 'auto !important',\n    display: 'block !important',\n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem',\n  },\n});\n\nconst initialData = (localStorage.getItem('initial-data'))?JSON.parse(localStorage.getItem('initial-data')!):{};\n\n\nconst renderers = [\n  ...materialRenderers,\n  //register custom renderers\n  { tester: ratingControlTester,\n    renderer: RatingControl\n  },\n  {\n    tester: imageControlTester,\n    renderer: imageControl,\n  }\n];\n\nconst modifiedData = (s: string):string => {return s.replaceAll(/\\$uuid/g,uuidv4())};\n\nconst App = () => {\n  const classes = useStyles();\n  const [data, setData] = useState<any>(initialData);\n  const stringifiedData = useMemo(() => JSON.stringify(data, null, 2), [data]);\n\n  useEffect(() => {\n  localStorage.setItem('initial-data', JSON.stringify(data));\n}, [data]);\n\n  const setDataWithGeneration = (formData:any) => {\n    let positionedData = formData;\n    if (positionedData.courses) positionedData.courses = positionedData.courses.map((c:any)=>{if (c.episodes) c.episodes.map((ep:any,i:number)=>{ep.position=i; if (ep.stories) ep.stories = ep.stories.map((st:any,j:number)=>{st.position=j; return st}); return ep});return c});\n    let stringifiedWithGenerationFormData = JSON.stringify(positionedData).replaceAll(/\\$uuid/g,uuidv4());\n    let generationFormData = JSON.parse(stringifiedWithGenerationFormData);\n    let stringifiedFormData = JSON.stringify(formData);\n    (stringifiedFormData != stringifiedWithGenerationFormData) ? setData(generationFormData) : setData(formData);\n  }\n\nconst useReleaseContent = (content:any) => {\n  setValue(1);\n  setData(content);\n}\n\nconst [params, setParams] = useState<any>({});\n\n  const clearData = () => {\n    setData({});\n  };\n\n  \n\nconst [displayBound, setDisplayBound] = useState<boolean>(true);\n\n// function Main(){\n//   return (\n    \n//   );\n// }\n\nfunction renderCourses(courses:any){\n   if (courses) return ( courses.map((c:any, i:number)=>{\n     let currentParams = params;\n      return(\n        <Grid item>\n\n          <Button className={classes.fauxButton}\n          onClick={()=>{currentParams.course=\"\"+i;currentParams.episode=null;setParams({...currentParams});console.log(currentParams)}}\n          >\n            {/*{c.flowTopic}*/}\n            <Card sx={{ maxWidth: 345 }} raised={i==params.course}>\n      <CardMedia\n        component=\"img\"\n        height=\"140\"\n        image={c.card.imageURL}\n        alt=\"green iguana\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant={'h6'} className={classes.title} component=\"div\">\n          {c.card.title}\n        </Typography>\n        <Typography variant={'body1'} className={classes.title} color=\"text.secondary\">\n          {c.card.description}\n        </Typography>\n        <Typography variant={'body2'} className={classes.title} color=\"text.secondary\">\n          Episodes: {c.episodes?.length||0}\n        </Typography>\n      </CardContent>\n    </Card>\n          </Button>\n\n            </Grid>\n        );\n    })\n   );\n}\n\nfunction renderEpisodes(episodes:any, courseNumber:string){    \n  let currentParams = params;\n   if (episodes) return ( episodes.map((e:any, i:number)=>{\n      return(\n        <Grid item>\n\n          <Button className={classes.fauxButton}\n          onClick={()=>{currentParams.episode=\"\"+i;setParams({...currentParams});console.log(currentParams)}}\n          >\n            \n\n            <Card sx={{ maxWidth: 345 }} raised={i==params.episode}>\n      <CardContent>\n        <Typography gutterBottom variant={'h6'} className={classes.title} component=\"div\">\n          {e.title}\n        </Typography>\n        <Typography variant={'caption'} className={classes.episodeDescription} color=\"text.secondary\">\n          {e.description}\n        </Typography>\n        <Typography variant={'caption'} className={classes.title} color=\"text.secondary\">\n          Stories: {e.stories?.length||0}\n        </Typography>\n      </CardContent>\n    </Card>\n          </Button>\n\n            </Grid>\n        );\n    })\n   );\n}\n\nfunction renderStories(stories:any, episodeNumber:string){    \n   if (stories) return ( stories.map((s:any, i:number)=>{\n      return(\n        <Grid item>\n          <Button className={classes.fauxButton}>\n            {/*{s.id}*/}\n            <Card sx={{ maxWidth: 250 }}>\n      <CardMedia\n        component=\"img\"\n        height=\"200\"\n        image={s.content.illustrationURL}\n        alt=\"green iguana\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant={'h6'} className={classes.title} component=\"div\">\n          {s.content.header}\n        </Typography>\n        <Typography variant={'caption'} className={classes.storyDescription} color=\"text.secondary\">\n          {s.content.text}\n        </Typography>\n      </CardContent>\n    </Card>\n          </Button>\n            </Grid>\n        );\n    })\n   );\n}\n\nfunction Preview(){\n  let courses = data.courses;\n  console.log(courses);\n   return (\n\n       <Grid container direction=\"row\" xs={12}>\n\n      {/*<a> {JSON.stringify(courses, null, 2)} </a>*/}\n      \n      <Grid container>\n      {/*<a> {JSON.stringify(params)} </a>*/}\n      </Grid>\n      <Grid\n      item\n      direction=\"column\"\n      xs={2}\n      >\n      {renderCourses(courses)}\n      </Grid>\n      <Grid\n      item\n      direction=\"column\"\n      xs={2}\n      >\n      <Course/>\n      </Grid>\n      <Grid\n      item\n      direction=\"column\"\n      xs={8}\n      >\n      <Episode/>\n      </Grid>\n      \n</Grid>\n   );\n\n\n\n}\n\n\n\nfunction Course(){\n  let currentParams = params;\n  console.log(\"cp:\"+JSON.stringify(currentParams));\n  if (currentParams.course){ \n  let {episodes} = data.courses[currentParams.course||0];\n  console.log(episodes);\n   if (currentParams.course) return (\n <Grid>\n    {/* <a> {JSON.stringify(episodes, null, 2)} </a> */}\n    <Grid\n    container\n    direction=\"column\"\n    >\n    {!!params.course?renderEpisodes(episodes,currentParams.course):null}\n    </Grid>\n    </Grid>\n   );\n }\n    return(null);\n\n\n\n}\n\nfunction Episode(){\n  console.log(params);\n  if (params.episode&&params.course){  \n  let stories = data.courses[params.course||0].episodes[params.episode||0]!.stories;\n  console.log(stories);\n   return (\n <Grid>\n    {/* <a> {JSON.stringify(stories, null, 2)} </a>/ */}\n    <Grid\n    item\n    direction=\"row\"\n    container\n    >\n    {renderStories(stories,params.episode)}\n    </Grid>\n    </Grid>\n   );\n }\n    return(null);\n\n\n\n}\nconst [value, setValue] = React.useState(1);\nconst [renderJSON, setRenderJSON] = React.useState<boolean>(false);\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue);\n  };\n\nconst [navbarHeight, setNavbarHeight] = useState(0);\n  const navbar:any = useRef(null);\n\n  useLayoutEffect(() => {\n    if (navbar.current) setNavbarHeight(navbar.current.clientHeight);\n  });\n\nreturn (\n\n<Fragment>\n        <Grid item sx={{paddingTop: navbarHeight+'px'}}></Grid>\n        <Tabs value={value} ref={navbar} onChange={handleChange} centered sx={{\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    zIndex: 10,\n    backgroundColor: 'white',\n    right: 0\n        }}>\n          <Tab icon={<FeaturedPlayList />} iconPosition=\"end\" label=\"Releases\" {...a11yProps(0)} />\n          <Tab icon={<Edit />} iconPosition=\"end\" label=\"Editor\" {...a11yProps(1)} />\n          <Tab icon={<RemoveRedEye />} iconPosition=\"end\" label=\"Preview\" {...a11yProps(2)} />\n        </Tabs>\n      <TabPanel value={value} index={0}>\n<Box sx={{ width: '100%' }}>\n<Grid container alignItems='center' justifyContent='center'>\n<Paper>\n<Grid color={'error'} container direction=\"row\" justifyContent='center' spacing={2} padding={1}>\n<Grid item><ReportProblemRounded color={'warning'}/></Grid>\n<Grid item><Typography variant={'subtitle1'}>Uploading following content to the editor will erase your current progress in the editor</Typography></Grid>\n</Grid>\n</Paper>\n</Grid>\n<Grid\n        // container\n        container\n        direction=\"column-reverse\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        spacing={4}\n        className={classes.container}\n      >\n      <Grid\n        // container\n        container\n        direction=\"column\"\n        alignItems=\"stretch\"\n        xs={8}\n        margin={1}\n        spacing={4}\n        className={classes.container}\n      >\n          \n            {releases.map(release=>{\n              return(\n                <Grid item xs={2}>\n                <Button color={'primary'} variant={'outlined'} onClick={()=>{ setData(release.data); setValue(1);}} sx={{ width: '100%', padding: '1em 0 1em 0' }}>{release.label}{<Publish />}</Button>\n                </Grid>\n                );\n            })}\n        </Grid>\n          \n      </Grid>\n</Box>\n      </TabPanel>\n\n      <TabPanel value={value} index={1}>\n      <FloatingCopyButton data={stringifiedData}/ >\n<Box sx={{ width: '100%' }}>\n\n<Grid\n        // container\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        spacing={2}\n        className={classes.container}\n      >\n          <Grid color={'error'} container direction=\"row\" justifyContent='center' spacing={1}>\n<Grid item><InfoRounded sx={{width: '0.75em'}} color={'primary'}/></Grid>\n<Grid item><Typography variant={'caption'}>Microeducation Editor updated at 02:16, 1 Aug, 2022</Typography></Grid>\n</Grid>\n          <Grid item>\n      <Accordion\n      onChange={(event,expanded)=>{ setRenderJSON(expanded);}}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMore />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography variant={'h6'}>JSON</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item padding={4} >\n          <Paper>\n<Grid item sx={{maxHeight: '300px', overflow: 'auto'}}>\n{/*{renderJSON && <CodeEditor\n      value={stringifiedData}\n      language=\"json\"\n      placeholder=\"Please enter JSON.\"\n      onChange={(event)=>{ setData(JSON.parse(event.target.value));}}\n      padding={15}\n      style={{\n        fontSize: 12,\n        backgroundColor: \"#f5f5f5\",\n        fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace',\n      }}\n    />}*/}\n</Grid>\n          <TextField \n            sx= {{padding: '0 1em 0 1em'}}\n            className={classes.dataContent}\n            id='boundData'\n            multiline\n            variant=\"standard\" \n            value={stringifiedData}\n            onChange={(event)=>{ setData(JSON.parse(event.target.value));}}\n            >\n            </TextField>\n            </Paper>\n            </Grid>\n            <Grid item sm={12}>\n          <Grid\n          container\n          justifyContent=\"center\"\n          direction=\"row\"\n          spacing={2}\n          >\n          <Grid item>\n          <Button\n            onClick={clearData}\n            color='error'\n            variant='contained'\n          >\n            Clear data\n          </Button>\n          </Grid>\n          </Grid>\n\n        </Grid>\n        </Grid>\n        </AccordionDetails>\n      </Accordion>\n      </Grid>\n      <Grid item>\n        \n          <Card>\n          <Typography\n          variant={'h5'}\n          className={classes.title}\n          padding={4}>\n            MicroEd Form\n          </Typography>\n            <Grid item padding={2}>\n            <JsonForms\n              schema={schema}\n              uischema={uischema}\n              data={data}\n              renderers={renderers}\n              cells={materialCells}\n              onChange={({ errors, data }) => {\n               setDataWithGeneration(data);\n              }}\n              ajv={handleDefaultsAjv}\n            />\n            </Grid>\n          </Card>\n          </Grid>\n\n      </Grid>\n</Box>\n\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n<Grid container alignItems='center' justifyContent='center'>\n<Paper>\n<Grid color={'error'} container direction=\"row\" justifyContent='center' spacing={2} padding={1}>\n<Grid item><ReportProblemRounded color={'warning'}/></Grid>\n<Grid item><Typography variant={'subtitle1'}>Current version of preview is limited and represent some screens wrong</Typography></Grid>\n</Grid>\n</Paper>\n</Grid>\n\n      <Preview />\n\n\n      </TabPanel>\n    \n    </Fragment>\n\n  );\n{/*return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={\n<Fragment>\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        spacing={2}\n        className={classes.container}\n      >\n        <Grid item sm={6}>\n          {displayBound && <Typography variant={'h4'} className={classes.title}>\n            JSON\n          </Typography>}\n           {displayBound &&  <TextField\n            className={classes.dataContent}\n            id='boundData'\n            multiline\n            variant=\"outlined\" \n            value={stringifiedData}\n            onChange={(event)=>{ setData(JSON.parse(event.target.value));}}\n            >\n            </TextField> }\n          <Grid\n          container\n          justifyContent=\"center\"\n          direction=\"row\"\n          spacing={2}\n          >\n          <Grid item>\n          <Button\n            onClick={clearData}\n            color='primary'\n            variant='contained'\n          >\n            Clear data\n          </Button>\n          </Grid>\n          <Grid item>\n          <Button\n            onClick={toggleJSONView}\n            color='secondary'\n            variant='contained'\n          >\n            {!displayBound?'Show':'Hide'} JSON\n          </Button>\n          </Grid>\n          <Grid item>\n          <Link to=\"preview\" style={{ textDecoration: 'none' }}>\n          <Button\n            color='secondary'\n            variant='contained'\n          >\n            Preview\n          </Button>\n          </Link>\n          </Grid>\n          </Grid>\n        </Grid>\n        <Grid item sm={6}>\n          <Typography variant={'h4'} className={classes.title}>\n            MicroEd Form\n          </Typography>\n          <div className={classes.demoform}>\n            <JsonForms\n              schema={schema}\n              uischema={uischema}\n              data={data}\n              renderers={renderers}\n              cells={materialCells}\n              onChange={({ errors, data }) => {\n               setDataWithGeneration(data);\n              }}\n              ajv={handleDefaultsAjv}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n        } />\n        <Route path=\"/preview\" element={<Preview />} />\n        <Route path=\"/preview/:course/\">\n          <Route path=\":episode\" element={<Preview />} />\n          <Route path=\"\" element={<Preview />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n*/}\n\n};\n\n\nexport default App;\n","import { createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/**\n * Customize form so each control has more space\n */\nconst theme = createTheme({\n  components: {\n    MuiFormControl: {\n      styleOverrides: {\n        root: {\n          margin: '0.8em 0',\n        },\n      }\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}